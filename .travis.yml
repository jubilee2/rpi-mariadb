os: linux
#arch:
#  - amd64
#  - arm64
env:
  - arch: amd64
  - arch: arm
services: docker

script:
  #- export arch=$(dpkg --print-architecture)
  #- if [[ $arch == arm* ]] ; then export arch=arm; fi
  - sudo service docker stop
  - sudo dockerd --experimental &
  - docker run --rm --privileged multiarch/qemu-user-static:register
  - cd ${arch}/ && docker build . --platform ${arch} -t sagu/mariadb-alpine:${arch}
  #- docker push sagu/mariadb-alpine:${arch}
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin && docker push sagu/mariadb-alpine:${arch}
  - kill %1
  - set +e
  - pkill -9 -P $$ &> /dev/null || true
  - exit 0

jobs:
  include:
    - stage: deploy
      script:
        - mkdir /root/.docker
        - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
        - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
        - docker pull sagu/mariadb-alpine:amd64
        - docker pull sagu/mariadb-alpine:arm
        - docker manifest create sagu/mariadb-alpine:latest sagu/mariadb-alpine:amd64 sagu/mariadb-alpine:arm
        - docker manifest annotate sagu/mariadb-alpine:latest sagu/mariadb-alpine:amd64 --os linux --arch amd64
        - docker manifest annotate sagu/mariadb-alpine:latest sagu/mariadb-alpine:arm --os linux --arch arm
        - docker manifest push sagu/mariadb-alpine:latest